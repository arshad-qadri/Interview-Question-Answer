[
  {
    "id": 1,
    "question": "What is Next.js?",
    "answer": "Next.js is a React framework that enables server-side rendering and static site generation for React apps.",
    "code": ""
  },
  {
    "id": 2,
    "question": "What are the main features of Next.js?",
    "answer": "Features include SSR, SSG, API routes, file-based routing, automatic code splitting, and built-in CSS support.",
    "code": ""
  },
  {
    "id": 3,
    "question": "What is server-side rendering (SSR) in Next.js?",
    "answer": "SSR renders the page on the server on each request and sends fully rendered HTML to the client.",
    "code": ""
  },
  {
    "id": 4,
    "question": "What is static site generation (SSG) in Next.js?",
    "answer": "SSG pre-renders pages at build time, generating static HTML files served to the client.",
    "code": ""
  },
  {
    "id": 5,
    "question": "What is Incremental Static Regeneration (ISR)?",
    "answer": "ISR allows static pages to be updated after build time by re-generating them in the background.",
    "code": ""
  },
  {
    "id": 6,
    "question": "What is the difference between getStaticProps and getServerSideProps?",
    "answer": "`getStaticProps` runs at build time for SSG; `getServerSideProps` runs on each request for SSR.",
    "code": ""
  },
  {
    "id": 7,
    "question": "What is getStaticPaths?",
    "answer": "`getStaticPaths` is used with dynamic routes to specify which paths to pre-render at build time.",
    "code": ""
  },
  {
    "id": 8,
    "question": "How does file-based routing work in Next.js?",
    "answer": "Pages in the `pages` directory automatically become routes based on their file name and folder structure.",
    "code": ""
  },
  {
    "id": 9,
    "question": "What are API routes in Next.js?",
    "answer": "API routes let you create serverless API endpoints inside the `pages/api` directory.",
    "code": ""
  },
  {
    "id": 10,
    "question": "What is middleware in Next.js?",
    "answer": "Middleware runs before a request is completed, allowing you to modify responses or perform redirects.",
    "code": ""
  },
  {
    "id": 11,
    "question": "What is the App Router in Next.js 13?",
    "answer": "App Router is the new routing system introduced in Next.js 13 that supports layouts, server components, and nested routes.",
    "code": ""
  },
  {
    "id": 12,
    "question": "What are server components in Next.js?",
    "answer": "Server components run only on the server and can fetch data directly without sending extra JavaScript to the client.",
    "code": ""
  },
  {
    "id": 13,
    "question": "What are client components in Next.js?",
    "answer": "Client components run in the browser and can use hooks and browser APIs.",
    "code": ""
  },
  {
    "id": 14,
    "question": "How do you handle environment variables in Next.js?",
    "answer": "Use `.env.local` files with variable names prefixed by `NEXT_PUBLIC_` to expose them to the client.",
    "code": ""
  },
  {
    "id": 15,
    "question": "How do you implement dynamic routing in Next.js?",
    "answer": "By creating files or folders with square brackets like `[id].js` inside the `pages` or `app` directory.",
    "code": ""
  },
  {
    "id": 16,
    "question": "What is the difference between client-side navigation and server-side navigation in Next.js?",
    "answer": "Client-side navigation uses the Next.js router to navigate without full page reload; server-side navigation reloads the page.",
    "code": ""
  },
  {
    "id": 17,
    "question": "What is Image Optimization in Next.js?",
    "answer": "Next.js automatically optimizes images via the `next/image` component with resizing, lazy loading, and more.",
    "code": ""
  },
  {
    "id": 18,
    "question": "How can you add global CSS in Next.js?",
    "answer": "Import your global CSS file in the custom `_app.js` or `layout.js` component.",
    "code": ""
  },
  {
    "id": 19,
    "question": "What is the purpose of the `_app.js` file?",
    "answer": "It customizes the root component that wraps all pages and is useful for global state, layouts, or styles.",
    "code": ""
  },
  {
    "id": 20,
    "question": "What is the `_document.js` file used for?",
    "answer": "It allows customizing the HTML document structure, e.g., adding lang attribute or meta tags.",
    "code": ""
  },
  {
    "id": 21,
    "question": "How do you fetch data in Next.js pages?",
    "answer": "Using data fetching methods like `getStaticProps`, `getServerSideProps`, or client-side fetching with hooks.",
    "code": ""
  },
  {
    "id": 22,
    "question": "What are the benefits of using ISR over SSR?",
    "answer": "ISR provides static site performance with the ability to update pages on-demand, unlike SSR which renders on each request.",
    "code": ""
  },
  {
    "id": 23,
    "question": "How do you protect routes in Next.js?",
    "answer": "By using middleware, higher-order components, or client-side checks with authentication state.",
    "code": ""
  },
  {
    "id": 24,
    "question": "How does Next.js support internationalization (i18n)?",
    "answer": "Next.js has built-in i18n routing support configured in `next.config.js`.",
    "code": ""
  },
  {
    "id": 25,
    "question": "What is the difference between static and dynamic imports in Next.js?",
    "answer": "Static imports load modules at build time, dynamic imports load modules asynchronously to split code.",
    "code": ""
  },
  {
    "id": 26,
    "question": "What is the role of `next.config.js`?",
    "answer": "It configures Next.js features like rewrites, redirects, environment variables, and build optimizations.",
    "code": ""
  },
  {
    "id": 27,
    "question": "How do you handle errors in Next.js API routes?",
    "answer": "By returning appropriate HTTP status codes and messages in the API handler functions.",
    "code": ""
  },
  {
    "id": 28,
    "question": "What is the `next/head` component used for?",
    "answer": "It manages the document head for adding meta tags, titles, and other head elements per page.",
    "code": ""
  },
  {
    "id": 29,
    "question": "How can you implement middleware redirects in Next.js?",
    "answer": "Using the `NextResponse.redirect()` method inside the middleware function.",
    "code": ""
  },
  {
    "id": 30,
    "question": "What is the difference between `getStaticProps` and client-side data fetching?",
    "answer": "`getStaticProps` fetches data at build time; client-side fetching happens in the browser after page load.",
    "code": ""
  },
  {
    "id": 31,
    "question": "How does Next.js handle CSS modules?",
    "answer": "CSS modules are supported out of the box and scoped locally by naming files as `*.module.css`.",
    "code": ""
  },
  {
    "id": 32,
    "question": "How do you implement authentication in Next.js?",
    "answer": "Using libraries like NextAuth.js or custom JWT implementations with API routes.",
    "code": ""
  },
  {
    "id": 33,
    "question": "What is Fast Refresh in Next.js?",
    "answer": "Fast Refresh allows instant feedback while editing React components without losing state.",
    "code": ""
  },
  {
    "id": 34,
    "question": "How can you customize the build output in Next.js?",
    "answer": "By configuring options in `next.config.js` such as webpack customizations or output directory.",
    "code": ""
  },
  {
    "id": 35,
    "question": "How do you add custom fonts in Next.js?",
    "answer": "By importing fonts in global CSS or using the built-in `next/font` module.",
    "code": ""
  },
  {
    "id": 36,
    "question": "What is the difference between static generation and client-side rendering in Next.js?",
    "answer": "Static generation pre-renders HTML at build time; client-side rendering generates HTML in the browser.",
    "code": ""
  },
  {
    "id": 37,
    "question": "What is the `useRouter` hook in Next.js?",
    "answer": "`useRouter` provides access to the router object to navigate and read route info.",
    "code": "import { useRouter } from 'next/router';"
  },
  {
    "id": 38,
    "question": "How do you implement API route middleware in Next.js?",
    "answer": "By composing middleware functions inside API route handlers.",
    "code": ""
  },
  {
    "id": 39,
    "question": "How can you enable TypeScript in Next.js?",
    "answer": "By adding a `tsconfig.json` file and installing TypeScript packages; Next.js detects and configures automatically.",
    "code": ""
  },
  {
    "id": 40,
    "question": "What is the difference between the Pages Router and the App Router in Next.js?",
    "answer": "Pages Router is the older file-based routing system; App Router supports nested layouts, server components, and more.",
    "code": ""
  },
  {
    "id": 41,
    "question": "How do you do code splitting in Next.js?",
    "answer": "Next.js automatically splits code by pages, and dynamic imports can split code at the component level.",
    "code": ""
  },
  {
    "id": 42,
    "question": "What is the `next/link` component used for?",
    "answer": "It enables client-side navigation between routes without full page reload.",
    "code": ""
  },
  {
    "id": 43,
    "question": "How do you handle image optimization in Next.js?",
    "answer": "By using the `next/image` component which provides resizing, lazy loading, and caching.",
    "code": ""
  },
  {
    "id": 44,
    "question": "What is ISR fallback blocking?",
    "answer": "Fallback blocking delays the page render until the static page is generated on the first request.",
    "code": ""
  },
  {
    "id": 45,
    "question": "How do you export a Next.js app as a static site?",
    "answer": "By running `next export` after static generation to create static HTML files.",
    "code": ""
  },
  {
    "id": 46,
    "question": "What are React Server Components in Next.js?",
    "answer": "React Server Components allow rendering components entirely on the server to reduce client bundle size.",
    "code": ""
  },
  {
    "id": 47,
    "question": "What are the benefits of using Next.js over plain React?",
    "answer": "Built-in SSR/SSG, routing, API routes, image optimization, and better SEO support.",
    "code": ""
  },
  {
    "id": 48,
    "question": "How do you debug a Next.js app?",
    "answer": "Using browser devtools, React DevTools, and server-side debugging tools like Node.js inspector.",
    "code": ""
  },
  {
    "id": 49,
    "question": "What is the difference between getInitialProps and getServerSideProps?",
    "answer": "`getInitialProps` runs on both server and client, `getServerSideProps` only runs on server at request time.",
    "code": ""
  },
  {
    "id": 50,
    "question": "How do you deploy a Next.js app?",
    "answer": "You can deploy on Vercel, Netlify, AWS, or any Node.js supported platform with server support for SSR.",
    "code": ""
  }
]
